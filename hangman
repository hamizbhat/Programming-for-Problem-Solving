
#include <stdio.h>
#include <string.h>

#define MAX_WORD_LEN 100
#define MAX_TRIES    5

void showHangman(int tries_left);

void clearInputBuffer(void) {
    int ch;
    while ((ch = getchar()) != '\n' && ch != EOF);
}

int main(void)
{
    char hangmanWord[MAX_WORD_LEN];
    char hangmanOutput[MAX_WORD_LEN];
    char guessedLetters[26] = {0}; // To track guessed letters
    int wrongTries = MAX_TRIES;
    int length;
    int i, win = 0;
    char alphabetFromUser;

    // Get the word to guess (hide from next player)
    printf("Enter a word in lowercase (no spaces): ");
    scanf("%s", hangmanWord);
    length = strlen(hangmanWord);

    // Hide the word and prepare the output
    
    for (i = 0; i < length; i++)
        hangmanOutput[i] = '_';
    hangmanOutput[length] = '\0';

    printf("\n\n!!!!!!!!!!!!!!!!!!! Welcome to the HANGMAN GAME !!!!!!!!!!!!!!!!!!!\n");
    printf("You have %d chances to guess the right word.\n", MAX_TRIES);

    while (wrongTries > 0) {
        printf("\nWord: ");
        for (i = 0; i < length; i++) printf("%c ", hangmanOutput[i]);
        printf("\nGuessed letters: ");
        for (i = 0; i < 26; i++)
            if (guessedLetters[i]) printf("%c ", 'a' + i);
        printf("\nTries left: %d", wrongTries);

        printf("\nEnter an alphabet (a-z): ");
        clearInputBuffer();
        scanf("%c", &alphabetFromUser);

        // Validate input
        if (alphabetFromUser < 'a' || alphabetFromUser > 'z') {
            printf("Invalid input! Please enter a lowercase letter.\n");
            continue;
        }

        // Check if already guessed
        if (guessedLetters[alphabetFromUser - 'a']) {
            printf("You already guessed '%c'. Try another letter.\n", alphabetFromUser);
            continue;
        }
        guessedLetters[alphabetFromUser - 'a'] = 1;

        // Check if guess is correct
        int correct = 0;
        for (i = 0; i < length; i++) {
            if (hangmanWord[i] == alphabetFromUser)
                hangmanOutput[i] = alphabetFromUser, correct = 1;
        }

        if (!correct) {
            printf("Wrong guess!\n");
            wrongTries--;
            showHangman(wrongTries);
        }

        // Check for win
        if (strcmp(hangmanOutput, hangmanWord) == 0) {
            win = 1;
            break;
        }
    }

    if (win) {
        printf("\n\nCongratulations! You win!\n");
        printf("The word was: %s\n", hangmanWord);
    } else {
        printf("\n\nSorry, you lost. The word was: %s\n", hangmanWord);
        showHangman(0);
    }

    printf("\nGame Over.\n");
    return 0;
}

void showHangman(int tries_left) {
    // HANGMAN visuals for 5..0 tries left
    
    printf("\n");
    printf("\t||=====\n");
    printf("\t||    |\n");
    if (tries_left <= 4) printf("\t||    O\n"); else printf("\t||\n");
    if (tries_left == 3) printf("\t||    |\n");
    else if (tries_left == 2) printf("\t||   /|\n");
    else if (tries_left <= 1) printf("\t||   /|\\\n");
    else printf("\t||\n");

    if (tries_left == 0) printf("\t||   / \\\n");
    else if (tries_left == 1) printf("\t||   /\n");
    else printf("\t||\n");

    printf("\t||\n");
}
